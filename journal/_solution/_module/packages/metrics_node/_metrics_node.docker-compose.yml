---
version: '3'
services:

# START SERVICE vcwc/elastic/metricbeat/node
  metricbeat:
    image: ${VCW_REGISTRY}vcwc/elastic.metricbeat:7.9.2
    environment: ['ES_METRICBEAT_OUTPUT_CONSOLE=${METRICS_NODE_ENVIRONMENT_OUTPUT_CONSOLE}','ES_METRICBEAT_OUTPUT_ELASTICSEARCH=${METRICS_NODE_ENVIRONMENT_OUTPUT_ELASTICSEARCH}','ES_METRICBEAT_OUTPUT_KAFKA=${METRICS_NODE_ENVIRONMENT_OUTPUT_KAFKA}','ES_METRICBEAT_OUTPUT_CONFIG_ELASTICSEARCH_HOSTS=${METRICS_NODE_ENVIRONMENT_OUTPUT_CONFIG_ELASTICSEARCH_HOSTS}','ES_METRICBEAT_OUTPUT_CONFIG_KIBANA_HOST=${METRICS_NODE_ENVIRONMENT_OUTPUT_CONFIG_KIBANA_HOST}','ES_METRICBEAT_OUTPUT_CONFIG_KIBANA_DASHBOARDS=${METRICS_NODE_ENVIRONMENT_OUTPUT_CONFIG_KIBANA_DASHBOARDS}','ES_METRICBEAT_OUTPUT_CONFIG_KAFKA_HOSTS=${METRICS_NODE_ENVIRONMENT_OUTPUT_CONFIG_KAFKA_HOSTS}','ES_METRICBEAT_OUTPUT_CONFIG_KAFKA_TOPIC=${METRICS_NODE_ENVIRONMENT_OUTPUT_CONFIG_KAFKA_TOPIC}','ES_METRICBEAT_LOGGING_LEVEL=${METRICS_NODE_ENVIRONMENT_LOGGING_LEVEL}']
    command: []
    volumes: ['/etc:/hostfs/etc:ro','/var/run/docker.sock:/var/run/docker.sock:ro','/proc:/hostfs/proc:ro','${VCW_STACK_GLOBAL_STACKPREFIX}_metricbeat_config:/vcw/pwd','${VCW_STACK_GLOBAL_STACKPREFIX}_metricbeat_volume:/usr/share/metricbeat/data']
    ports: []
    networks: [${VCW_STACK_GLOBAL_NETWORKLOCAL}_overlay]
    deploy:
      mode: global
      resources:
        limits:
          memory: '${METRICS_NODE_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          memory: '${METRICS_NODE_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
${METRICS_NODE_COMPOSE_EXTENSIONS}
# END SERVICE vcwc/elastic/metricbeat/node

networks: {${VCW_STACK_GLOBAL_NETWORKLOCAL}_overlay: { external: true }}
volumes: {${VCW_STACK_GLOBAL_STACKPREFIX}_metricbeat_config: { external: true },${VCW_STACK_GLOBAL_STACKPREFIX}_metricbeat_volume: { external: true }}
${VCW_STACK_GLOBAL_COMPOSE_EXTENSIONS}
